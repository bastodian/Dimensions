#!/usr/bin/env python

'''
    Methods for trimming fastq sequences and corresponding quality scores as 
    provided in the string of phred scores.
'''
 
class EndTrim(object):
    """ Two functions that trim sequences from the 5 and 3 prime ends. """

    def __init__(self, Sequence, Quality, QScore):
        """ Instantiation of the class requires 3 arguments:
        Sequence, Quality line, and minimum Phred score to accept. """
        from PhredTools import Convert
        PhredConvert = Convert()
        import sys
        try:
            assert type(Sequence) == str
            self.Sequence = Sequence
        except KeyError:
            print 'Sequence not a string!'
            sys.exit(1)
        try:
            assert type(Quality) == str
            self.Quality = Quality
        except KeyError:
            print 'Quality line not a string!'
            sys.exit(1)
        try:
            assert 0 <= QScore <= 93 and type(QScore) == int
            self.QScore = PhredConvert.ReturnASCII(QScore)
        except KeyError:
            self.QScore = QScore
            print 'Quality score not an integer!'
            sys.exit(1)
        print self.QScore, self.Sequence, self.Quality

    def FivePrime(self):
        """ Trim from the 5 prime end of a sequence. """
        for i in range(len(self.Quality)):
            if self.Quality[i] >= self.QScore:
                break
        self.Sequence = self.Sequence[i:] ## This was [(i-1):]
        self.Quality = self.Quality[i:]

    def ThreePrime(self):
        """ Trim from the 3 prime end of a sequence. """
        #Loc = -1 ## DELETE
        for i in range(len(self.Quality)-1,-1,-1):
            if self.Quality[i] >= self.QScore:
                #Loc = i+1 ##DELETE
                break
        self.Sequence = self.Sequence[0:i] ## WAS to [0:Loc]
        self.Quality = self.Quality[0:i]

    def Retrieve(self):
        """ Retrieve the sequence and quality line. """
        return self.Sequence, self.Quality
    
# TODO implement intercrap and length trim -- what about pairing?

#       Make 5 and 3 prime trimmers check up to 5 base pairs into sequence
