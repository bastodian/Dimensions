#!/usr/bin/env python

import sys, os, glob

# Create a dictionary of count files to be processed and sort them
Files = []
for CountFile in glob.glob(os.path.join('./', 'D*')):
    Files.append(CountFile)
Files=sorted(Files)

# I need a dictionary for file and PTHR ID counts
# The latter will be stored as a dictionary in a dictionary
FileDict = {}
SampleID = []
# Crawl over the Count Files and store counts in Dict
for File in Files:
    with open(File, 'r') as Counts:
        PTHRdict = {}
        SampleID.append(File.rstrip('.pruned').lstrip('./'))
        for Line in Counts:
            if 'PTHR' in Line:
                PTHR = Line.rstrip('\n').split()[0]
                FPKM = Line.rstrip('\n').split()[5]
                PTHRdict[PTHR] = FPKM
        FileDict[File] = PTHRdict
#        for PTHR, FPKM in PTHRdict.iteritems():
#            print PTHR, FPKM
print len(FileDict)


OutDict = {}
count = -1
for File in Files:
    count += 1
    if count == 0:
        for Key in FileDict[File].keys():
            OutDict[Key] = []
#print OutDict

for File in Files:
    for PTHR, FPKM in FileDict[File].iteritems():
        OutDict[PTHR].append(FPKM)
#    print File, OutDict
#print OutDict

#print ' '.join(Files)
sys.stdout.write(',%s\n' % (','.join(sorted(SampleID))))
for i,j in OutDict.iteritems():
    sys.stdout.write('%s,%s\n' % (i, ','.join(j)))
